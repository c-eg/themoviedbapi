plugins {
    id "java-library"
    id 'checkstyle'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version "2.0.0"
}

repositories {
    mavenCentral()
}

dependencies {
    // logging
    implementation 'org.slf4j:slf4j-api:2.0.13'

    // testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'

    testImplementation 'org.mockito:mockito-core:5.12.0'

    // util
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'

    implementation 'org.apache.commons:commons-lang3:3.14.0'
    testImplementation 'commons-io:commons-io:2.16.1'
}

// https://stackoverflow.com/questions/34377367/why-is-gradle-install-replacing-my-version-with-unspecified
group 'uk.co.conoregan'
version '2.0.4'

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion '10.17.0'
    configFile file("config/checkstyle/checkstyle.xml")
}

checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}
tasks.withType(Checkstyle).configureEach {
    reports {
        html.required = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)

            pom {
                name = "themoviedbapi"
                description = 'A Java-wrapper around the JSON API provided by TMdB, which is an open database for movie and tv content.'
                url = 'https://github.com/c-eg/themoviedbapi'

                licenses {
                    license {
                        name = 'BSD'
                        url = 'https://github.com/c-eg/themoviedbapi/blob/master/LICENCE.txt'
                    }
                }

                scm {
                    connection = 'scm:git:github.com/c-eg/themoviedbapi.git'
                    url = 'https://github.com/c-eg/themoviedbapi.git'
                }

                developers {
                    developer {
                        id = 'holgerbrandl'
                        name = 'Holger Brandl'
                        email = 'holgerbrandl@gmail.com'
                    }

                    developer {
                        id = 'c-eg'
                        name = 'Conor Egan'
                        email = '17conoregan@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

artifacts {
    archives javadocJar, sourcesJar
}

if (project.hasProperty('signing.keyId') && project.hasProperty("signing.password") && project.hasProperty("signing.secretKeyRingFile")) signing {
    sign publishing.publications.mavenJava
    sign configurations.archives
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

javadoc.options.addStringOption('Xdoclint:none', '-quiet')

